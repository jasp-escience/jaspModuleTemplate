name: Check pre-requisites for module creation

on:
  workflow_dispatch:

# on:
#   pull_request:
#     types: [opened]

permissions: {}

jobs:
  check-description-file:
    if: github.event.pull_request.head.repo.fork == true && github.event.pull_request.head.repo.owner.login != 'jasp-escience'
    runs-on: ubuntu-latest
    env:
      ORG_NAME: "jasp-escience"

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      # Step 2: Check if the DESCRIPTION file exists
      - name: Verify DESCRIPTION file exists
        run: |
          if [ ! -f "DESCRIPTION" ]; then
            echo "ERROR: DESCRIPTION file is missing."
            exit 1
          else
            echo "DESCRIPTION file exists."
          fi

      - name: Check for package name in DESCRIPTION
        run: |
          # PACKAGE_NAME=$(cat DESCRIPTION | grep "^Package:" | awk '{print $2}')
          PACKAGE_NAME=$(awk -F ': ' '/^Package:/ {print $2}' DESCRIPTION | tr -d '\r')
          if [ -z "$PACKAGE_NAME" ]; then
            echo "Error: Package name not found in DESCRIPTION" >&2
            exit 1
          fi
          # Prevent special characters in package name
          if [[ ! "$PACKAGE_NAME" =~ ^[a-zA-Z0-9_-]+$ ]]; then
            echo "Error: PACKAGE_NAME contains invalid characters!" >&2
            exit 1
          fi
          echo "MODULE_NAME=${PACKAGE_NAME}-module" >> $GITHUB_ENV
        shell: bash

      - name: Check if `.github/` folder was modified using Git diff
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})

          echo "Changed files:"
          echo "$CHANGED_FILES"

          if echo "$CHANGED_FILES" | grep -q "^\.github/"; then
            echo "❌ The .github/ folder was been modified."
            exit 1
          else
            echo "✅ The .github/ folder has NOT modified."
          fi

      - name: Check if module already exists submodules
        env:
          MODULE_NAME: ${{ env.MODULE_NAME }}
        run: |
          git clone --depth=1 https://github.com/$ORG_NAME/modules.git target_repo
          cd target_repo
          if git config --file .gitmodules --get-regexp path | grep -q "^submodule.modules/${MODULE_NAME}.path"; then
            echo "❌ Submodule '${MODULE_NAME}' found! Failing the workflow."
            exit 1
          else
            echo "✅ No submodule named '${MODULE_NAME}' found."
          fi
        shell: bash

      - name: Check if repository exists in organization
        env:
          MODULE_NAME: ${{ env.MODULE_NAME }}
        run: |
          if curl -s -o /dev/null -w "%{http_code}" "https://github.com/$ORG_NAME/$MODULE_NAME" | grep -q "200"; then
            echo "❌ Repository '${MODULE_NAME}' exists in organization '${ORG_NAME}'. Failing the workflow."
            exit 1
          else
            echo "✅ Repository '${MODULE_NAME}' does not exist in organization '${ORG_NAME}'."
          fi
        shell: bash
